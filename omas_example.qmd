---
title: "OMAS Survey R Demo"
format: html
editor: visual
---

This document includes demonstration code for importing, wrangling, and summarizing data from  the 2021 OMAS survey.

### Load Data

```{r,message=FALSE}

library(tidyverse)
library(knitr)

data_url <- ("https://collinpaschall.github.io/omas2021_puf_10122022.rds")

# Drop observations from survey where FIPS is missing or otherwise not good
# (assume county must be known for this demonstration)

dat <- read_rds(data_url) %>% filter(S9<996)

# Inspect if you want
# glimpse(dat)

```

```{r,message=FALSE}

# Merge in some county names corresponding with FIPS codes

# get FIPS (pulled from Kieran Healy's page, https://github.com/kjhealy/fips-codes)

fips <- read_csv("https://raw.githubusercontent.com/collinpaschall/collinpaschall.github.io/main/fips.csv")


# data preparation

dat2 <- fips %>% 
  
  filter(state=="OH") %>% 
  
  mutate(fips=fips-39000) %>% # Subtract 39000 from the FIPS values for Ohio
  
  rename(`County Name` = name) %>% # rename fips$name to fips$county_name
  
  select(c("fips",`County Name`)) %>% # drop "state"
  
  left_join(dat,.,by=c("S9"="fips")) %>%  # join to survey data
  
  filter(`County Name` %in% c("Franklin County","Warren County","Cuyahoga County","Hamilton County","Montgomery County","Summit County")) %>% # select only large countries
  
  select(c(`County Name`,"A1","S17_1","H84_A2","D30")) %>% # select a handful of variables of interest %>% 
  
  mutate(
    `Insured 0/1` = case_when(
        A1==2 ~ 0,
        A1==1 ~ 1),
    `Insured Yes/No` = case_when(
        A1==2 ~ "No",
        A1==1 ~ "Yes"
    ),
    `Health Status` = case_when(
        D30==5 ~ 1,
        D30==4 ~ 2,
        D30==3 ~ 3,
        D30==2 ~ 4,
        D30==1 ~ 5),
    `White 0/1` = case_when(
       S17_1==2 ~ 0,
       S17_1==1 ~ 1)) %>% 
  
    rename(`Income`=H84_A2) %>% 

    drop_na()  # drop NAs

```

### Summary Values for Select Variables

```{r}

kable(dat2 %>%
    group_by(`County Name`) %>% 
    summarise("Average Income"=round(mean(`Income`),0),
              "Health Status"=round(mean(`Health Status`),2),
              "% Insured"=round(sum(`Insured 0/1`)/n(),2),
              "% White"=round(sum(`White 0/1`)/n(),2)))

```

### Visualization of health status by insured status and county

```{r,message=FALSE}

summary_dat <- dat2 %>%
    group_by(`County Name`,`Insured Yes/No`) %>%
    summarise("Health Status"=round(mean(`Health Status`),2))

summary_dat %>%
  ggplot(aes(x=`Insured Yes/No`,y=`Health Status`))+
  geom_bar(stat="identity")+
  facet_wrap(vars(`County Name`))


```

### A simple regression model for health status as a function of other variables

```{r,warning=FALSE,message=FALSE,results='asis'}

library(stargazer)

mod <- lm(`Health Status`~`Income` + `Insured 0/1` + `White 0/1`,dat2)

stargazer(mod,type="html")

```

### Visualizing predicted values using regression model

This figure displays predicted values for health status as a function of income, holding other variables at their means (which is not necessarily meaningful for categorical independent variables, but this is only for technical demonstration purposes.)

```{r}
library(jtools)
effect_plot(mod,pred=`Income`,interval=T)+
  xlab("Income")+
  ylab("Health Status")

```

